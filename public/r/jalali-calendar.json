{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "jalali-calendar",
  "type": "registry:component",
  "title": "Jalali Calendar",
  "description": "A Persian/Jalali calendar component based on react-day-picker.",
  "dependencies": [
    "date-fns-jalali@latest",
    "react-day-picker@latest"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/new-york/jalali-calendar/jalali-calendar.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react'\r\nimport { DayPicker } from 'react-day-picker/persian'\r\nimport { cn } from '@/lib/utils'\r\nimport { buttonVariants } from '@/components/ui/button'\r\n\r\nexport type JalaliCalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction JalaliCalendar({\r\n\tclassName,\r\n\tclassNames,\r\n\tshowOutsideDays = true,\r\n\t...props\r\n}: JalaliCalendarProps) {\r\n\t// Use useEffect to ensure client-side hydration\r\n\tconst [mounted, setMounted] = React.useState(false)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetMounted(true)\r\n\t}, [])\r\n\r\n\t// Use a placeholder if not mounted yet\r\n\tif (!mounted) {\r\n\t\treturn (\r\n\t\t\t<div className='w-fit p-3 min-h-[300px] min-w-[300px] bg-gray-100 animate-pulse rounded' />\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DayPicker\r\n\t\t\tshowOutsideDays={showOutsideDays}\r\n\t\t\tclassName={cn('w-fit p-3', className)}\r\n\t\t\tclassNames={{\r\n\t\t\t\tmonth: 'space-y-4',\r\n\t\t\t\tmonths: 'flex flex-col sm:flex-row space-y-4 sm:space-y-0 relative',\r\n\t\t\t\tmonth_caption: 'flex justify-center pt-1 relative items-center',\r\n\t\t\t\tmonth_grid: 'w-full border-collapse space-y-1',\r\n\t\t\t\tcaption_label: 'text-sm font-medium',\r\n\t\t\t\tnav: 'flex row-reverse items-center justify-between absolute inset-x-0',\r\n\t\t\t\tbutton_previous: cn(\r\n\t\t\t\t\tbuttonVariants({ variant: 'outline' }),\r\n\t\t\t\t\t'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 z-10'\r\n\t\t\t\t),\r\n\t\t\t\tbutton_next: cn(\r\n\t\t\t\t\tbuttonVariants({ variant: 'outline' }),\r\n\t\t\t\t\t'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100 z-10'\r\n\t\t\t\t),\r\n\t\t\t\tweeks: 'w-full border-collapse space-y-',\r\n\t\t\t\tweekdays: 'flex',\r\n\t\t\t\tweekday:\r\n\t\t\t\t\t'text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]',\r\n\t\t\t\tweek: 'flex w-full mt-2',\r\n\t\t\t\tday_button:\r\n\t\t\t\t\t'h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20',\r\n\t\t\t\tday: cn(\r\n\t\t\t\t\tbuttonVariants({ variant: 'ghost' }),\r\n\t\t\t\t\t'h-9 w-9 p-0 font-normal aria-selected:opacity-100'\r\n\t\t\t\t),\r\n\t\t\t\trange_end: 'day-range-end',\r\n\t\t\t\tselected:\r\n\t\t\t\t\t'bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground',\r\n\t\t\t\ttoday: 'bg-accent text-accent-foreground',\r\n\t\t\t\toutside:\r\n\t\t\t\t\t'day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30',\r\n\t\t\t\tdisabled: 'text-muted-foreground opacity-50',\r\n\t\t\t\trange_middle:\r\n\t\t\t\t\t'aria-selected:bg-accent aria-selected:text-accent-foreground',\r\n\t\t\t\thidden: 'invisible',\r\n\t\t\t\t...classNames\r\n\t\t\t}}\r\n\t\t\tcomponents={{\r\n\t\t\t\tChevron: ({ ...props }) =>\r\n\t\t\t\t\tprops.orientation === 'left' ? (\r\n\t\t\t\t\t\t<ChevronRight {...props} className='h-4 w-4' />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ChevronLeft {...props} className='h-4 w-4' />\r\n\t\t\t\t\t)\r\n\t\t\t}}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nJalaliCalendar.displayName = 'JalaliCalendar'\r\n\r\nexport { JalaliCalendar }\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}