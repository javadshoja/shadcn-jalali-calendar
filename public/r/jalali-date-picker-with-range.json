{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "jalali-date-picker-with-range",
  "type": "registry:component",
  "title": "Jalali Date Picker with Range",
  "description": "A Persian/Jalali date range picker component with popover.",
  "dependencies": [
    "date-fns-jalali@latest",
    "react-day-picker@latest"
  ],
  "registryDependencies": [
    "button",
    "popover",
    "https://calendar.jbrave.ir/r/jalali-calendar.json"
  ],
  "files": [
    {
      "path": "registry/new-york/jalali-date-picker-with-range/page.tsx",
      "content": "import { JalaliDatePickerWithRange } from '@/registry/new-york/jalali-date-picker-with-range/jalali-date-picker-with-range'\n\nexport default function Page() {\n\treturn (\n\t\t<div className='flex min-h-svh w-full items-center justify-center p-6 md:p-10'>\n\t\t\t<div className='w-full max-w-sm'>\n\t\t\t\t<JalaliDatePickerWithRange />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n",
      "type": "registry:page",
      "target": "app/page.tsx"
    },
    {
      "path": "registry/new-york/jalali-date-picker-with-range/jalali-date-picker-with-range.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport { addDays, format } from 'date-fns-jalali'\nimport { CalendarIcon } from 'lucide-react'\nimport { cn } from '@/lib/utils'\nimport { Button } from '@/components/ui/button'\nimport { JalaliCalendar } from '@/registry/new-york/jalali-calendar/jalali-calendar'\nimport {\n\tPopover,\n\tPopoverContent,\n\tPopoverTrigger\n} from '@/components/ui/popover'\nimport { DateRange } from 'react-day-picker'\n\nconst JalaliDatePickerWithRange = ({\n\tclassName\n}: React.HTMLAttributes<HTMLDivElement>) => {\n\t// Use a simpler approach to state to avoid type issues\n\tconst [fromDate, setFromDate] = React.useState<Date | undefined>(undefined)\n\tconst [toDate, setToDate] = React.useState<Date | undefined>(undefined)\n\n\tReact.useEffect(() => {\n\t\t// Initialize dates only on the client side\n\t\tif (!fromDate) {\n\t\t\tsetFromDate(new Date())\n\t\t}\n\t\tif (!toDate) {\n\t\t\tsetToDate(addDays(new Date(), 20))\n\t\t}\n\t}, [fromDate, toDate])\n\n\t// Construct our date range object\n\tconst dateRange = fromDate\n\t\t? {\n\t\t\t\tfrom: fromDate,\n\t\t\t\tto: toDate\n\t\t  }\n\t\t: undefined\n\n\t// Handle selection from the calendar\n\tconst handleSelect = (range: DateRange) => {\n\t\tif (range?.from) setFromDate(range.from)\n\t\tif (range?.to) setToDate(range.to)\n\t\telse if (range?.from && !range.to) setToDate(undefined)\n\t}\n\n\treturn (\n\t\t<div className={cn('grid gap-2', className)}>\n\t\t\t<Popover>\n\t\t\t\t<PopoverTrigger asChild>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tid='date'\n\t\t\t\t\t\tdir='rtl'\n\t\t\t\t\t\tvariant='outline'\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t'justify-start text-left font-normal',\n\t\t\t\t\t\t\t!fromDate && 'text-muted-foreground'\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CalendarIcon />\n\t\t\t\t\t\t{fromDate ? (\n\t\t\t\t\t\t\ttoDate ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{format(fromDate, 'dd LLLL y')} -{' '}\n\t\t\t\t\t\t\t\t\t{format(toDate, 'dd LLLL y')}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tformat(fromDate, 'LLL dd, y')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>انتخاب تاریخ</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Button>\n\t\t\t\t</PopoverTrigger>\n\t\t\t\t<PopoverContent className='w-auto p-0' align='start'>\n\t\t\t\t\t<JalaliCalendar\n\t\t\t\t\t\tmode='range'\n\t\t\t\t\t\tdefaultMonth={fromDate}\n\t\t\t\t\t\tselected={dateRange}\n\t\t\t\t\t\tonSelect={handleSelect}\n\t\t\t\t\t\tnumberOfMonths={2}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</PopoverContent>\n\t\t\t</Popover>\n\t\t</div>\n\t)\n}\n\nexport { JalaliDatePickerWithRange }\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}